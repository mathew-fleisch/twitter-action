name: Release twitter-action
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Release twitter-action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Release twitter-action"
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
          REGISTRY_APPNAME: ${{ secrets.REGISTRY_APPNAME }}
          FORK_OWNER: ${{ secrets.FORK_OWNER }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "Check environment variables are set..."
          expected="REGISTRY_USERNAME REGISTRY_PASSWORD REGISTRY_URL REGISTRY_APPNAME FORK_OWNER GIT_TOKEN"
          for expect in $expected; do
            if [[ -z "${!expect}" ]]; then
              echo "Missing Github Secret: $expect"
              echo "See read-me about automation to set this up in your fork"
              exit 1
            fi
          done
          echo "git fetch --prune --unshallow (to make sure all tags are downloaded to action)"
          git fetch --prune --unshallow
          tag=$(git describe --tags)
          message="$(git for-each-ref refs/tags/$tag --format='%(contents)')"
          name=$(echo "$message" | head -n1)
          echo "Tag: $tag"
          echo "Message: $message"
          echo "Name: $name"
          echo "Building go-binary..."
          go build twitter-action.go
          echo "Creating git release..."
          # Create a release
          curl_data='{"tag_name": "'$tag'", "target_commitish": "master", "name": "twitter-action-'$tag'", "body": "'$name'", "draft": false, "prerelease": false}'
          echo "Data: $curl_data"
          echo "$curl_data" | jq '.'
          curl_post="curl -XPOST -H \"Content-Type: application/json\" -H \"Authorization: token $GIT_TOKEN\" --data \"$curl_data\" https://api.github.com/repos/${FORK_OWNER}/twitter-action/releases"
          echo "$curl_post"
          echo $("$curl_post")
          if [[ -f "./twitter-action" ]]; then
            echo "Add go-binary to release: $tag"
            .github/workflows/upload-github-release-asset.sh github_api_token=${{ secrets.GIT_TOKEN }} owner=mathew-fleisch repo=twitter-action tag=${tag} filename=./twitter-action
          else
            echo "Was not able to add go-binary to release..."
          fi
          echo "Login to container registry"
          rm -rf .git
          echo "$REGISTRY_PASSWORD" | docker login ${REGISTRY_URL} -u="$REGISTRY_USERNAME" --password-stdin
          echo "Building docker container"
          docker build -t twitter-action-local .
          docker tag twitter-action-local ${REGISTRY_URL}/${REGISTRY_APPNAME}:${tag}
          echo "Pushing docker container"
          docker push ${REGISTRY_URL}/${REGISTRY_APPNAME}:${tag}
          cd ..
          tar -zcvf twitter-action.tar.gz twitter-action
          mv twitter-action.tar.gz twitter-action/.
      - name: Upload tarball
        uses: actions/upload-artifact@v1
        with:
          name: twitter-action.tar.gz
          path: twitter-action.tar.gz
